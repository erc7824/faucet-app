name: Stable Tag

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.tagger.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name without 'v' prefix
        id: tagger
        run: echo "tag=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: server
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/server:${{ steps.tagger.outputs.tag }}
            ghcr.io/${{ github.repository }}/server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy Sandbox
    needs: build-and-publish
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER_NAME: uat
      GKE_CLUSTER_ZONE: europe-central2
      GKE_BASTION_NAME: gke-uat-bastion
      GKE_BASTION_ZONE: europe-central2-a
      HELM_NAMESPACE: clearnet-sandbox
      HELM_RELEASE: faucet-app
      HELM_CONFIG_ENV: sandbox
      KUBECONFIG: kubeconfig.conf

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GKE_SANDBOX_SA_KEY }}'

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GKE_PROJECT }}
        install_components: gke-gcloud-auth-plugin

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} \
          --project ${PROJECT_ID} \
          --zone ${GKE_CLUSTER_ZONE} \
          --internal-ip

    - name: Port-forward to GKE Bastion
      run: |-
        gcloud compute ssh ${GKE_BASTION_NAME} \
          --tunnel-through-iap \
          --project ${PROJECT_ID} \
          --zone ${GKE_BASTION_ZONE} \
          --ssh-key-expiration=600s \
          -- -NL8888:127.0.0.1:8888 &
        sleep 5

    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Release
      env:
        HTTPS_PROXY: http://localhost:8888
      run: |-
        helm upgrade -i ${HELM_RELEASE} chart \
          -n ${HELM_NAMESPACE} \
          --reuse-values \
          -f chart/config/${HELM_CONFIG_ENV}/values.yaml \
          --set image.tag="${{ needs.build-and-publish.outputs.image-tag }}"

  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [build-and-publish, deploy]
    if: always()

    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments
          SLACK_USERNAME: CI/CD Bot
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || contains(needs.*.result, 'cancelled') && 'cancelled' || 'success' }}
          SLACK_ICON_EMOJI: ${{ contains(needs.*.result, 'failure') && ':x:' || contains(needs.*.result, 'cancelled') && ':warning:' || ':white_check_mark:' }}
          SLACK_TITLE: 'üö∞ üöÄ Faucet App Stable Release üöÄ üö∞'
          SLACK_MESSAGE_ON_SUCCESS: |
            ‚úÖ Stable build and deployment completed successfully!
            ${{github.event.head_commit.message}}
          SLACK_MESSAGE_ON_FAILURE: |
            ‚ùå Stable build or deployment failed!
            ${{github.event.head_commit.message}}
          SLACK_MESSAGE_ON_CANCEL: |
            ‚ö†Ô∏è Stable build or deployment was cancelled!
            ${{github.event.head_commit.message}}
          SLACK_FOOTER: 'Faucet App CI/CD Pipeline'
